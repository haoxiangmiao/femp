;;; -*- Mode: LISP; package:maxima; syntax:common-lisp; -*- 
(in-package :maxima)
(DSKSETQ $%I1 '((MSETQ) |$Nx| ((MLIST) $X ((MPLUS) 1 ((MMINUS) $X))))) 
(ADDLABEL '$%I1) 
(DSKSETQ $%O1 '((MLIST SIMP) ((MPLUS SIMP) 1 ((MTIMES SIMP) -1 $X)) $X)) 
(ADDLABEL '$%O1) 
(DSKSETQ $%I2 '((MSETQ) |$Ny| (($SUBSTITUTE) $X $Y |$Nx|))) 
(ADDLABEL '$%I2) 
(DSKSETQ $%O2 '((MLIST SIMP) ((MPLUS SIMP) 1 ((MTIMES SIMP) -1 $X)) $X)) 
(ADDLABEL '$%O2) 
(DSKSETQ $%I3 '|$Ny|) 
(ADDLABEL '$%I3) 
(DSKSETQ $%O3 '((MLIST SIMP) ((MPLUS SIMP) 1 ((MTIMES SIMP) -1 $X)) $X)) 
(ADDLABEL '$%O3) 
(DSKSETQ $%I4 '(($SUBSTITUTE) $X $Y |$Nx|)) 
(ADDLABEL '$%I4) 
(DSKSETQ $%O4 '((MLIST SIMP) ((MPLUS SIMP) 1 ((MTIMES SIMP) -1 $X)) $X)) 
(ADDLABEL '$%O4) 
(DSKSETQ $%I5 '(($SUBSTITUTE) ((MLIST) ((MEQUAL) $X $Y)) |$Nx|)) 
(ADDLABEL '$%I5) 
(DSKSETQ $%O5 '((MLIST SIMP) $Y ((MPLUS . #1=(SIMP)) 1 ((MTIMES . #1#) -1 $Y)))) 
(ADDLABEL '$%O5) 
(DSKSETQ $%I6 '((MSETQ) |$Ny| (($SUBSTITUTE) ((MLIST) ((MEQUAL) $X $Y)) |$Nx|))) 
(ADDLABEL '$%I6) 
(DSKSETQ $%O6 '((MLIST SIMP) $Y ((MPLUS . #1=(SIMP)) 1 ((MTIMES . #1#) -1 $Y)))) 
(ADDLABEL '$%O6) 
(DSKSETQ $%I7
 '((MSETQ) |$n1| ((MLIST) (#1=(MTIMES) ((|$Nx| ARRAY) 1) ((|$Ny| ARRAY) 1)) (#1# ((|$Nx| ARRAY) 2) ((|$Ny| ARRAY) 1)) (#1# ((|$Nx| ARRAY) 1) ((|$Ny| ARRAY) 2)) (#1# ((|$Nx| ARRAY) 2) ((|$Ny| ARRAY) 2))))) 
(ADDLABEL '$%I7) 
(DSKSETQ $%O7 '((MLIST SIMP) (#1=(MTIMES . #2=(SIMP)) $X $Y) (#1# #3=(#4=(MPLUS . #2#) 1 ((MTIMES SIMP) -1 $X)) $Y) (#1# $X #5=(#4# 1 (#1# -1 $Y))) (#1# #3# #5#))) 
(ADDLABEL '$%O7) 
(DSKSETQ $%I8 '|$n1|) 
(ADDLABEL '$%I8) 
(DSKSETQ $%O8 '((MLIST SIMP) (#1=(MTIMES . #2=(SIMP)) $X $Y) (#1# #3=(#4=(MPLUS . #2#) 1 ((MTIMES SIMP) -1 $X)) $Y) (#1# $X #5=(#4# 1 (#1# -1 $Y))) (#1# #3# #5#))) 
(ADDLABEL '$%O8) 
(DSKSETQ $%I9 '(($DEFINE) (($F) $X $Y) |$n1|)) 
(ADDLABEL '$%I9) 
(DSKSETQ $%O9 '((MDEFINE SIMP) (($F) $X $Y) ((MLIST SIMP) (#1=(MTIMES . #2=(SIMP)) $X $Y) (#1# #3=(#4=(MPLUS . #2#) 1 ((MTIMES SIMP) -1 $X)) $Y) (#1# $X #5=(#4# 1 (#1# -1 $Y))) (#1# #3# #5#)))) 
(ADDLABEL '$%O9) 
(DSKSETQ $%I10 '(($F) 1 1)) 
(ADDLABEL '$%I10) 
(DSKSETQ $%O10 '((MLIST SIMP) 1 0 0 0)) 
(ADDLABEL '$%O10) 
(DSKSETQ $%I11 '(($F) 0 0)) 
(ADDLABEL '$%I11) 
(DSKSETQ $%O11 '((MLIST SIMP) 0 0 0 1)) 
(ADDLABEL '$%O11) 
(DSKSETQ $%I12 '((MSETQ) $V ((|$Nx| ARRAY) 1))) 
(ADDLABEL '$%I12) 
(DSKSETQ $%O12 '$X) 
(ADDLABEL '$%O12) 
(DSKSETQ $%I13 '((MSETQ) ((|$Nx| ARRAY) 1) ((|$Nx| ARRAY) 2))) 
(ADDLABEL '$%I13) 
(DSKSETQ $%O13 '((MPLUS SIMP) 1 ((MTIMES SIMP) -1 $X))) 
(ADDLABEL '$%O13) 
(DSKSETQ $%I14 '((MSETQ) ((|$Nx| ARRAY) 2) $V)) 
(ADDLABEL '$%I14) 
(DSKSETQ $%O14 '$X) 
(ADDLABEL '$%O14) 
(DSKSETQ $%I15 '(($REMVALUE) $V)) 
(ADDLABEL '$%I15) 
(DSKSETQ $%O15 '((MLIST SIMP) $V)) 
(ADDLABEL '$%O15) 
(DSKSETQ $%I16 '$VALUES) 
(ADDLABEL '$%I16) 
(DSKSETQ $%O16 '((MLIST SIMP) |$Nx| |$Ny| |$n1| $V)) 
(ADDLABEL '$%O16) 
(DSKSETQ $%I17 '((MSETQ) |$Ny| (($SUBSTITUTE) ((MLIST) ((MEQUAL) $X $Y)) |$Nx|))) 
(ADDLABEL '$%I17) 
(DSKSETQ $%O17 '((MLIST SIMP) ((MPLUS . #1=(SIMP)) 1 ((MTIMES . #1#) -1 $Y)) $Y)) 
(ADDLABEL '$%O17) 
(DSKSETQ $%I18
 '((MSETQ) |$n1| ((MLIST) (#1=(MTIMES) ((|$Nx| ARRAY) 1) ((|$Ny| ARRAY) 1)) (#1# ((|$Nx| ARRAY) 2) ((|$Ny| ARRAY) 1)) (#1# ((|$Nx| ARRAY) 1) ((|$Ny| ARRAY) 2)) (#1# ((|$Nx| ARRAY) 2) ((|$Ny| ARRAY) 2))))) 
(ADDLABEL '$%I18) 
(DSKSETQ $%O18 '((MLIST SIMP) (#1=(MTIMES . #2=(SIMP)) #3=(#4=(MPLUS . #2#) 1 ((MTIMES SIMP) -1 $X)) #5=(#4# 1 (#1# -1 $Y))) (#1# $X #5#) (#1# #3# $Y) (#1# $X $Y))) 
(ADDLABEL '$%O18) 
(DSKSETQ $%I19 '(($DEFINE) (($F) $X $Y) |$n1|)) 
(ADDLABEL '$%I19) 
(DSKSETQ $%O19 '((MDEFINE SIMP) (($F) $X $Y) ((MLIST SIMP) (#1=(MTIMES . #2=(SIMP)) #3=(#4=(MPLUS . #2#) 1 ((MTIMES SIMP) -1 $X)) #5=(#4# 1 (#1# -1 $Y))) (#1# $X #5#) (#1# #3# $Y) (#1# $X $Y)))) 
(ADDLABEL '$%O19) 
(DSKSETQ $%I20 '(($F) 0 0)) 
(ADDLABEL '$%I20) 
(DSKSETQ $%O20 '((MLIST SIMP) 1 0 0 0)) 
(ADDLABEL '$%O20) 
(DSKSETQ $%I21 '(($F) 1 1)) 
(ADDLABEL '$%I21) 
(DSKSETQ $%O21 '((MLIST SIMP) 0 0 0 1)) 
(ADDLABEL '$%O21) 
(DSKSETQ $%I22 '((MSETQ) $V ((MLIST) $P1 $P2 $P3 $P4))) 
(ADDLABEL '$%I22) 
(DSKSETQ $%O22 '((MLIST SIMP) $P1 $P2 $P3 $P4)) 
(ADDLABEL '$%O22) 
(DSKSETQ $%I23 '((MNCTIMES) |$n1| $V)) 
(ADDLABEL '$%I23) 
(DSKSETQ $%O23 '(#1=(MPLUS . #2=(SIMP)) (#3=(MTIMES . #2#) $P1 #4=(#1# 1 ((MTIMES SIMP) -1 $X)) #5=(#1# 1 (#3# -1 $Y))) (#3# $P2 $X #5#) (#3# $P3 #4# $Y) (#3# $P4 $X $Y))) 
(ADDLABEL '$%O23) 
(DSKSETQ $%I24 '(($GRIND) $%)) 
(ADDLABEL '$%I24) 
(DSKSETQ $%O24 '$DONE) 
(ADDLABEL '$%O24) 
(DSKSETQ $%I25 '(($DIFF) ((MNCTIMES) |$n1| $V) $X)) 
(ADDLABEL '$%I25) 
(DSKSETQ $%O25 '(#1=(MPLUS . #2=(SIMP)) (#3=(MTIMES . #2#) -1 $P1 #4=(#1# 1 (#3# -1 $Y))) (#3# $P2 #4#) (#3# -1 $P3 $Y) (#3# $P4 $Y))) 
(ADDLABEL '$%O25) 
(DSKSETQ $%I26 '(($GRIND) (($DIFF) ((MNCTIMES) |$n1| $V) $X))) 
(ADDLABEL '$%I26) 
(DSKSETQ $%O26 '$DONE) 
(ADDLABEL '$%O26) 
(DSKSETQ $%I27 '(($GRIND) (($DIFF) ((MNCTIMES) |$n1| $V) $Y))) 
(ADDLABEL '$%I27) 
(DSKSETQ $%O27 '$DONE) 
(ADDLABEL '$%O27) 
(DSKSETQ $%I28 '$VALUES) 
(ADDLABEL '$%I28) 
(DSKSETQ $%O28 '((MLIST SIMP) |$Nx| |$Ny| |$n1| $V)) 
(ADDLABEL '$%O28) 
(DSKSETQ $%I29 '(($SAVE) "quad4.session" $ALL)) 
(ADDLABEL '$%I29) 
(DSKSETQ |$Nx| '((MLIST SIMP) ((MPLUS SIMP) 1 ((MTIMES SIMP) -1 $X)) $X)) 
(ADD2LNC '|$Nx| $VALUES) 
(DSKSETQ |$Ny| '((MLIST SIMP) ((MPLUS . #1=(SIMP)) 1 ((MTIMES . #1#) -1 $Y)) $Y)) 
(ADD2LNC '|$Ny| $VALUES) 
(DSKSETQ |$n1| '((MLIST SIMP) (#1=(MTIMES . #2=(SIMP)) #3=(#4=(MPLUS . #2#) 1 ((MTIMES SIMP) -1 $X)) #5=(#4# 1 (#1# -1 $Y))) (#1# $X #5#) (#1# #3# $Y) (#1# $X $Y))) 
(ADD2LNC '|$n1| $VALUES) 
(DSKSETQ $V '((MLIST SIMP) $P1 $P2 $P3 $P4)) 
(ADD2LNC '$V $VALUES) 
(MDEFPROP $F ((LAMBDA) ((MLIST) $X $Y) ((MLIST SIMP) (#1=(MTIMES . #2=(SIMP)) #3=(#4=(MPLUS . #2#) 1 ((MTIMES SIMP) -1 $X)) #5=(#4# 1 (#1# -1 $Y))) (#1# $X #5#) (#1# #3# $Y) (#1# $X $Y))) MEXPR) 
(ADD2LNC '(($F) $X $Y) $FUNCTIONS) 
(MDEFPROP $NSET (NIL $VERSION 1.21) $PROPS) 
(ADD2LNC '$NSET $PROPS) 
(DEFPROP ${ %{ VERB) 
(DEFPROP ${ "{" OP) 
(SETF (GETHASH "{" *OPR-TABLE*) '${) 
(ADD2LNC '"{" $PROPS) 
(DEFPROP %{ ${ NOUN) 
(DEFPROP $} "}" OP) 
(SETF (GETHASH "}" *OPR-TABLE*) '$}) 
(ADD2LNC '"}" $PROPS) 
(DEFPROP $KRON_DELTA SIMP-KRON-DELTA OPERATORS) 
(ADD2LNC '$KRON_DELTA $PROPS) 
(DEFPROP $KRON_DELTA T OPERS) 
(ADD2LNC '$KRON_DELTA $PROPS) 
(DEFPROP $KRON_DELTA T $SYMMETRIC) 
(ADD2LNC '$KRON_DELTA $PROPS) 
(RESTORE-FACTS '((($KIND) $KRON_DELTA $SYMMETRIC))) 
(ADD2LNC '$KRON_DELTA $PROPS) 
(MDEFPROP $TRYLEVEL (NIL $MAXMIN 1) $PROPS) 
(ADD2LNC '$TRYLEVEL $PROPS) 
(MDEFPROP $MAXMIN (NIL $VERSION 1) $PROPS) 
(ADD2LNC '$MAXMIN $PROPS) 
(MDEFPROP $NUMMOD (NIL $VERSION 3) $PROPS) 
(ADD2LNC '$NUMMOD $PROPS) 
(DEFPROP $CONJUGATE SIMP-CONJUGATE OPERATORS) 
(ADD2LNC '$CONJUGATE $PROPS) 
(RESTORE-FACTS '((($KIND) $CONJUGATE $COMPLEX))) 
(ADD2LNC '$CONJUGATE $PROPS) 
(MDEFPROP $CONJUGATE (NIL $VERSION 1) $PROPS) 
(ADD2LNC '$CONJUGATE $PROPS) 
(DEFPROP %ERF_GENERALIZED $ERF_GENERALIZED NOUN) 
(DEFPROP %ERF_GENERALIZED SIMP-ERF-GENERALIZED OPERATORS) 
(ADD2LNC '%ERF_GENERALIZED $PROPS) 
(DEFPROP %ERF_GENERALIZED T OPERS) 
(ADD2LNC '%ERF_GENERALIZED $PROPS) 
(DEFPROP %ERF_GENERALIZED T $ANTISYMMETRIC) 
(ADD2LNC '%ERF_GENERALIZED $PROPS) 
(RESTORE-FACTS '((($KIND) %ERF_GENERALIZED $ANTISYMMETRIC))) 
(ADD2LNC '%ERF_GENERALIZED $PROPS) 
(DEFPROP $ERF_GENERALIZED %ERF_GENERALIZED VERB) 
(DEFPROP $BETA SIMPBETA OPERATORS) 
(ADD2LNC '$BETA $PROPS) 
(DEFPROP $BETA T OPERS) 
(ADD2LNC '$BETA $PROPS) 
(DEFPROP $BETA T $SYMMETRIC) 
(ADD2LNC '$BETA $PROPS) 
(RESTORE-FACTS '((($KIND) $BETA $SYMMETRIC))) 
(ADD2LNC '$BETA $PROPS) 
(SETQ $LINENUM 29) 
(SETQ *ALPHABET* (NCONC '(#\_ #\%) *ALPHABET*)) 
(ADD2LNC '$INTEGERVALUED $FEATURES) 