;;; -*- Mode: LISP; package:maxima; syntax:common-lisp; -*- 
(in-package :maxima)
(DSKSETQ $%I1 '((MSETQ) |$n| ((MQUOTIENT) (#1=(MTIMES) (#2=(MPLUS) $X (#3=(MMINUS) $X2)) (#2# $X (#3# $X3)) (#2# $X (#3# $X4))) (#1# (#2# $X1 (#3# $X2)) (#2# $X1 (#3# $X3)) (#2# $X1 (#3# $X4)))))) 
(ADDLABEL '$%I1) 
(DSKSETQ $%O1
 '((MTIMES . #1=(SIMP)) (#2=(MPLUS . #1#) $X (#3=(MTIMES SIMP) -1 $X2)) (#4=(MEXPT . #1#) (#2# $X1 (#3# -1 $X2)) -1) (#2# $X (#3# -1 $X3)) (#4# (#2# $X1 (#3# -1 $X3)) -1) (#2# $X (#3# -1 $X4))
   (#4# (#2# $X1 (#3# -1 $X4)) -1))) 
(ADDLABEL '$%O1) 
(DSKSETQ $%I2 '((MSETQ) |$m| (#1=(MLIST) |$n| (($SUBSTITUTE) (#1# (#2=(MEQUAL) $X1 $X2) (#2# $X2 $X1)) |$n|)))) 
(ADDLABEL '$%I2) 
(DSKSETQ $%I3 '(($SUBSTITUTE) ((MLIST) (#1=(MEQUAL) $X1 $X2) (#1# $X2 $X1)) |$n|)) 
(ADDLABEL '$%I3) 
(DSKSETQ $%I4
 '((MSETQ) |$n|
   ((MLIST) (#1=(MQUOTIENT) (#2=(MTIMES) (#3=(MPLUS) $X (#4=(MMINUS) $X2)) (#3# $X (#4# $X3)) (#3# $X (#4# $X4))) (#2# (#3# $X1 (#4# $X2)) (#3# $X1 (#4# $X3)) (#3# $X1 (#4# $X4))))
    (#1# (#2# (#3# $X (#4# $X1)) (#3# $X (#4# $X3)) (#3# $X (#4# $X4))) (#2# (#3# $X2 (#4# $X1)) (#3# $X2 (#4# $X3)) (#3# $X2 (#4# $X4))))
    (#1# (#2# (#3# $X (#4# $X1)) (#3# $X (#4# $X2)) (#3# $X (#4# $X3))) (#2# (#3# $X4 (#4# $X1)) (#3# $X4 (#4# $X2)) (#3# $X4 (#4# $X3))))))) 
(ADDLABEL '$%I4) 
(DSKSETQ $%O4
 '((MLIST SIMP)
   (#1=(MTIMES . #2=(SIMP)) (#3=(MPLUS . #2#) $X (#4=(MTIMES SIMP) -1 $X2)) (#5=(MEXPT . #2#) (#3# $X1 (#4# -1 $X2)) -1) (#3# $X (#4# -1 $X3)) (#5# (#3# $X1 (#4# -1 $X3)) -1) (#3# $X (#4# -1 $X4))
    (#5# (#3# $X1 (#4# -1 $X4)) -1))
   (#1# (#3# $X (#4# -1 $X1)) (#5# (#3# (#4# -1 $X1) $X2) -1) (#3# $X (#4# -1 $X3)) (#5# (#3# $X2 (#4# -1 $X3)) -1) (#3# $X (#4# -1 $X4)) (#5# (#3# $X2 (#4# -1 $X4)) -1))
   (#1# (#3# $X (#4# -1 $X1)) (#3# $X (#4# -1 $X2)) (#3# $X (#4# -1 $X3)) (#5# (#3# (#4# -1 $X1) $X4) -1) (#5# (#3# (#4# -1 $X2) $X4) -1) (#5# (#3# (#4# -1 $X3) $X4) -1)))) 
(ADDLABEL '$%O4) 
(DSKSETQ $%I5 '(($SUBSTITUTE) $X $X2 |$n|)) 
(ADDLABEL '$%I5) 
(DSKSETQ $%O5 '((MLIST SIMP) 0 1 0)) 
(ADDLABEL '$%O5) 
(DSKSETQ $%I6 '(($SUBSTITUTE) $X $X1 |$n|)) 
(ADDLABEL '$%I6) 
(DSKSETQ $%O6 '((MLIST SIMP) 1 0 0)) 
(ADDLABEL '$%O6) 
(DSKSETQ $%I7 '(($SUBSTITUTE) $X $X3 |$n|)) 
(ADDLABEL '$%I7) 
(DSKSETQ $%O7 '((MLIST SIMP) 0 0 0)) 
(ADDLABEL '$%O7) 
(DSKSETQ $%I8
 '((MSETQ) |$n|
   ((MLIST) (#1=(MQUOTIENT) (#2=(MTIMES) (#3=(MPLUS) $X (#4=(MMINUS) $X2)) (#3# $X (#4# $X3))) (#2# (#3# $X1 (#4# $X2)) (#3# $X1 (#4# $X3))))
    (#1# (#2# (#3# $X (#4# $X1)) (#3# $X (#4# $X3))) (#2# (#3# $X2 (#4# $X1)) (#3# $X2 (#4# $X3))))))) 
(ADDLABEL '$%I8) 
(DSKSETQ $%O8
 '((MLIST SIMP) (#1=(MTIMES . #2=(SIMP)) (#3=(MPLUS . #2#) $X (#4=(MTIMES SIMP) -1 $X2)) (#5=(MEXPT . #2#) (#3# $X1 (#4# -1 $X2)) -1) (#3# $X (#4# -1 $X3)) (#5# (#3# $X1 (#4# -1 $X3)) -1))
   (#1# (#3# $X (#4# -1 $X1)) (#5# (#3# (#4# -1 $X1) $X2) -1) (#3# $X (#4# -1 $X3)) (#5# (#3# $X2 (#4# -1 $X3)) -1)))) 
(ADDLABEL '$%O8) 
(DSKSETQ $%I9
 '((MSETQ) |$n|
   ((MLIST) (#1=(MQUOTIENT) (#2=(MTIMES) (#3=(MPLUS) $X (#4=(MMINUS) $X2)) (#3# $X (#4# $X3))) (#2# (#3# $X1 (#4# $X2)) (#3# $X1 (#4# $X3))))
    (#1# (#2# (#3# $X (#4# $X1)) (#3# $X (#4# $X3))) (#2# (#3# $X2 (#4# $X1)) (#3# $X2 (#4# $X3)))) (#1# (#2# (#3# $X (#4# $X1)) (#3# $X (#4# $X2))) (#2# (#3# $X3 (#4# $X1)) (#3# $X3 (#4# $X2))))))) 
(ADDLABEL '$%I9) 
(DSKSETQ $%O9
 '((MLIST SIMP) (#1=(MTIMES . #2=(SIMP)) (#3=(MPLUS . #2#) $X (#4=(MTIMES SIMP) -1 $X2)) (#5=(MEXPT . #2#) (#3# $X1 (#4# -1 $X2)) -1) (#3# $X (#4# -1 $X3)) (#5# (#3# $X1 (#4# -1 $X3)) -1))
   (#1# (#3# $X (#4# -1 $X1)) (#5# (#3# (#4# -1 $X1) $X2) -1) (#3# $X (#4# -1 $X3)) (#5# (#3# $X2 (#4# -1 $X3)) -1))
   (#1# (#3# $X (#4# -1 $X1)) (#3# $X (#4# -1 $X2)) (#5# (#3# (#4# -1 $X1) $X3) -1) (#5# (#3# (#4# -1 $X2) $X3) -1)))) 
(ADDLABEL '$%O9) 
(DSKSETQ $%I10 '(($SUBSTITUTE) $X $X3 |$n|)) 
(ADDLABEL '$%I10) 
(DSKSETQ $%O10 '((MLIST SIMP) 0 0 1)) 
(ADDLABEL '$%O10) 
(DSKSETQ $%I11 '(($SUBSTITUTE) $X $X2 |$n|)) 
(ADDLABEL '$%I11) 
(DSKSETQ $%O11 '((MLIST SIMP) 0 1 0)) 
(ADDLABEL '$%O11) 
(DSKSETQ $%I12 '(($SUBSTITUTE) $X $X1 |$n|)) 
(ADDLABEL '$%I12) 
(DSKSETQ $%O12 '((MLIST SIMP) 1 0 0)) 
(ADDLABEL '$%O12) 
(DSKSETQ $%I13 '(($SAVE) "hexahedron27.session" $ALL)) 
(ADDLABEL '$%I13) 
(DSKSETQ |$n|
 '((MLIST SIMP) (#1=(MTIMES . #2=(SIMP)) (#3=(MPLUS . #2#) $X (#4=(MTIMES SIMP) -1 $X2)) (#5=(MEXPT . #2#) (#3# $X1 (#4# -1 $X2)) -1) (#3# $X (#4# -1 $X3)) (#5# (#3# $X1 (#4# -1 $X3)) -1))
   (#1# (#3# $X (#4# -1 $X1)) (#5# (#3# (#4# -1 $X1) $X2) -1) (#3# $X (#4# -1 $X3)) (#5# (#3# $X2 (#4# -1 $X3)) -1))
   (#1# (#3# $X (#4# -1 $X1)) (#3# $X (#4# -1 $X2)) (#5# (#3# (#4# -1 $X1) $X3) -1) (#5# (#3# (#4# -1 $X2) $X3) -1)))) 
(ADD2LNC '|$n| $VALUES) 
(MDEFPROP $NSET (NIL $VERSION 1.21) $PROPS) 
(ADD2LNC '$NSET $PROPS) 
(DEFPROP ${ %{ VERB) 
(DEFPROP ${ "{" OP) 
(SETF (GETHASH "{" *OPR-TABLE*) '${) 
(ADD2LNC '"{" $PROPS) 
(DEFPROP %{ ${ NOUN) 
(DEFPROP $} "}" OP) 
(SETF (GETHASH "}" *OPR-TABLE*) '$}) 
(ADD2LNC '"}" $PROPS) 
(DEFPROP $KRON_DELTA SIMP-KRON-DELTA OPERATORS) 
(ADD2LNC '$KRON_DELTA $PROPS) 
(DEFPROP $KRON_DELTA T OPERS) 
(ADD2LNC '$KRON_DELTA $PROPS) 
(DEFPROP $KRON_DELTA T $SYMMETRIC) 
(ADD2LNC '$KRON_DELTA $PROPS) 
(RESTORE-FACTS '((($KIND) $KRON_DELTA $SYMMETRIC))) 
(ADD2LNC '$KRON_DELTA $PROPS) 
(MDEFPROP $TRYLEVEL (NIL $MAXMIN 1) $PROPS) 
(ADD2LNC '$TRYLEVEL $PROPS) 
(MDEFPROP $MAXMIN (NIL $VERSION 1) $PROPS) 
(ADD2LNC '$MAXMIN $PROPS) 
(MDEFPROP $NUMMOD (NIL $VERSION 3) $PROPS) 
(ADD2LNC '$NUMMOD $PROPS) 
(DEFPROP $CONJUGATE SIMP-CONJUGATE OPERATORS) 
(ADD2LNC '$CONJUGATE $PROPS) 
(RESTORE-FACTS '((($KIND) $CONJUGATE $COMPLEX))) 
(ADD2LNC '$CONJUGATE $PROPS) 
(MDEFPROP $CONJUGATE (NIL $VERSION 1) $PROPS) 
(ADD2LNC '$CONJUGATE $PROPS) 
(DEFPROP %ERF_GENERALIZED $ERF_GENERALIZED NOUN) 
(DEFPROP %ERF_GENERALIZED SIMP-ERF-GENERALIZED OPERATORS) 
(ADD2LNC '%ERF_GENERALIZED $PROPS) 
(DEFPROP %ERF_GENERALIZED T OPERS) 
(ADD2LNC '%ERF_GENERALIZED $PROPS) 
(DEFPROP %ERF_GENERALIZED T $ANTISYMMETRIC) 
(ADD2LNC '%ERF_GENERALIZED $PROPS) 
(RESTORE-FACTS '((($KIND) %ERF_GENERALIZED $ANTISYMMETRIC))) 
(ADD2LNC '%ERF_GENERALIZED $PROPS) 
(DEFPROP $ERF_GENERALIZED %ERF_GENERALIZED VERB) 
(DEFPROP $BETA SIMPBETA OPERATORS) 
(ADD2LNC '$BETA $PROPS) 
(DEFPROP $BETA T OPERS) 
(ADD2LNC '$BETA $PROPS) 
(DEFPROP $BETA T $SYMMETRIC) 
(ADD2LNC '$BETA $PROPS) 
(RESTORE-FACTS '((($KIND) $BETA $SYMMETRIC))) 
(ADD2LNC '$BETA $PROPS) 
(SETQ $LINENUM 13) 
(SETQ *ALPHABET* (NCONC '(#\_ #\%) *ALPHABET*)) 
(ADD2LNC '$INTEGERVALUED $FEATURES) 